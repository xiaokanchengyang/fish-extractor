name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y fish shellcheck
      
      - name: Run shellcheck on shell scripts
        run: |
          find . -name "*.sh" -type f -print0 | xargs -0 shellcheck || true
      
      - name: Check Fish syntax
        run: |
          for file in $(find . -name "*.fish" -type f); do
            echo "Checking $file..."
            fish --no-execute "$file" || exit 1
          done
      
      - name: Run fish_indent check
        run: |
          for file in $(find . -name "*.fish" -type f); do
            echo "Checking formatting: $file..."
            if ! fish_indent --check "$file"; then
              echo "File needs formatting: $file"
              echo "Run: fish_indent -w $file"
              exit 1
            fi
          done

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Fish shell
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo apt-add-repository -y ppa:fish-shell/release-3
          sudo apt-get update
          sudo apt-get install -y fish
          
      - name: Install archive tools
        run: |
          sudo apt-get install -y \
            tar gzip bzip2 xz-utils zstd lz4 \
            zip unzip p7zip-full \
            file pv
      
      - name: Run tests
        run: |
          fish tests/run_all.fish

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Run security audit
        run: |
          sudo apt-get update
          sudo apt-get install -y fish
          fish scripts/security_audit.fish
      
      - name: Check for hardcoded secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  compatibility:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        fish-version: ['3.6', '3.7']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Fish ${{ matrix.fish-version }}
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y software-properties-common
            sudo apt-add-repository -y ppa:fish-shell/release-3
            sudo apt-get update
            sudo apt-get install -y fish
          else
            brew install fish
          fi
      
      - name: Check compatibility
        run: |
          fish --version
          fish -c "source functions/archive_manager.fish; extract --help"

  codeql:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v5
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'python'  # For any Python helper scripts
          queries: security-and-quality
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3